{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033\themelang1033\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fbidi \fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\fbidi \froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f10\fbidi \fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f34\fbidi \froman\fcharset1\fprq2{\*\panose 02040503050406030204}Cambria Math;}
{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fdbmajor\f31501\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fhimajor\f31502\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria;}{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fdbminor\f31505\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}{\fbiminor\f31507\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f39\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\f40\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\f42\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f43\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\f44\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\f45\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f46\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\f47\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f59\fbidi \fmodern\fcharset238\fprq1 Courier New CE;}
{\f60\fbidi \fmodern\fcharset204\fprq1 Courier New Cyr;}{\f62\fbidi \fmodern\fcharset161\fprq1 Courier New Greek;}{\f63\fbidi \fmodern\fcharset162\fprq1 Courier New Tur;}{\f64\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f65\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f66\fbidi \fmodern\fcharset186\fprq1 Courier New Baltic;}{\f67\fbidi \fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbmajor\f31518\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbmajor\f31519\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fdbmajor\f31521\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fdbmajor\f31522\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbmajor\f31523\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fdbmajor\f31524\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fdbmajor\f31525\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbmajor\f31526\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fhimajor\f31528\fbidi \froman\fcharset238\fprq2 Cambria CE;}{\fhimajor\f31529\fbidi \froman\fcharset204\fprq2 Cambria Cyr;}{\fhimajor\f31531\fbidi \froman\fcharset161\fprq2 Cambria Greek;}{\fhimajor\f31532\fbidi \froman\fcharset162\fprq2 Cambria Tur;}
{\fhimajor\f31535\fbidi \froman\fcharset186\fprq2 Cambria Baltic;}{\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbminor\f31558\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\fdbminor\f31559\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbminor\f31561\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fdbminor\f31562\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\fdbminor\f31563\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbminor\f31564\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fdbminor\f31565\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\fdbminor\f31566\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}
{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}
{\fbiminor\f31578\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbiminor\f31579\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbiminor\f31581\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fbiminor\f31582\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbiminor\f31583\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbiminor\f31584\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fbiminor\f31585\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbiminor\f31586\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;}{\*\defchp }{\*\defpap \ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 \sqformat \spriority0 Normal;}{\s1\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 
\rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sqformat \spriority0 heading 1;}{
\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext0 \sqformat \spriority0 heading 2;}{\*\cs10 \additive \ssemihidden \spriority0 Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext11 \ssemihidden \sunhideused Normal Table;}{
\s15\qc \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 \sqformat \spriority0 Title;}{
\s16\qc \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 \sqformat \spriority0 Subtitle;}{\*\cs17 
\additive \rtlch\fcs1 \ai\af0 \ltrch\fcs0 \i \sbasedon10 \sqformat \spriority0 Emphasis;}}{\*\listtable{\list\listtemplateid1088579608\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0
{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\loch\af3\hich\af3\dbch\af0\fbias0\hres0\chhres0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative
\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0
{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0
{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0
{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext
\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid207183327}{\list\listtemplateid-1980347226\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\loch\af3\hich\af3\dbch\af0\fbias0\hres0\chhres0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0
\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid560948573}{\list\listtemplateid-588595002
\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat2\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\loch\af3\hich\af3\dbch\af0\fbias0\hres0\chhres0 \fi-360\li720
\jclisttab\tx720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li1440
\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li2160
\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li2880
\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li3600
\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li4320
\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li5040
\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li5760
\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li6480
\jclisttab\tx6480\lin6480 }{\listname ;}\listid1374039420}{\list\listtemplateid238700022\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703
\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0\hres0\chhres0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext
\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-180\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative
\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1
\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0
\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-180\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4
\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel
\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-180\li6480\jclisttab\tx6480\lin6480 
}{\listname ;}\listid2054843530}}{\*\listoverridetable{\listoverride\listid560948573\listoverridecount0\ls1}{\listoverride\listid1374039420\listoverridecount0\ls2}{\listoverride\listid207183327\listoverridecount0\ls3}{\listoverride\listid2054843530
\listoverridecount0\ls4}}{\*\rsidtbl \rsid9187989}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0\mdefJc1\mwrapIndent1440\mintLim0\mnaryLim1}{\info{\title Swarmongers: A Simple Retro 2D Vector Shooter}
{\author George Chadderdon}{\operator George Chadderdon}{\creatim\yr2009\mo4\dy13\hr3\min43}{\revtim\yr2009\mo4\dy13\hr3\min43}{\printim\yr2001\mo11\dy20\hr14\min56}{\version2}{\edmins0}{\nofpages16}{\nofwords6464}{\nofchars32045}
{\*\company Magic Lantern Playware}{\nofcharsws38433}{\vern32895}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\trackmoves0\trackformatting1\donotembedsysfont1\relyonvml0\donotembedlingdata0\grfdocevents0\validatexml1\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors1\noxlattoyen
\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1800\dgvorigin1440\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\nojkernpunct\rsidroot9187989 \fet0{\*\wgrffmtfilter 2450}\ilfomacatclnup0\ltrpar \sectd \ltrsect
\linex0\endnhere\sectlinegrid360\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar
\s15\qc \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
Swarmongers: A Simple Retro 2D Vector Shooter
\par }\pard\plain \ltrpar\qc \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par }\pard\plain \ltrpar\s16\qc \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid9187989 George Chadderdon, 11/28/01
\par }\pard\plain \ltrpar\qc \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par }\pard\plain \ltrpar\s1\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 1 Introduction
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par When I first joined Magic Lantern, I had some experience programming games on my own.  I had, on and off, been working on programming my own text-adventure game bas
ed on an old Apple game called Eamon.  This went through various incarnations in Applesoft Basic and Pascal on the Macintosh.  There were also a handful of turn-based strategy games that I coded in the Apple II and Mac environments.  However, I had never 
really developed a full-fledged video-game in the sense of something like Asteroids or even Pong (though there was one rather humorous effort called Martian Invaders which was a kind of proto-video-game in Applesoft Basic which used the Apple\rquote 
s low-res graphics to represent your ship which could slide up and down firing at 6 or so fixed-location \'93Martian ships\'94 that had a pretty lame static firing pattern). I\rquote 
d certainly never programmed a video-game in a Windows/PC coding environment.  
\par 
\par One of my first tasks was to get some exposure to DirectX and the overall architecture of PC video games.  To that end, I started looking at Mark Sachs\rquote  port of Star Castle and studying Andre LaMothe\rquote s \'93
Windows Game Programming for Dummies\'94.  As I analyzed this code and got a better feel for how Mark\rquote s vector-based game worked, I had an urge to create my own vector engine and game.  Thus, Swarmongers was born.
\par 
\par Swarmongers is a simple Asteroids-style 2D shooter which uses vector graphics to represent the ships, shots, and exp
losions in the game.  There are 20 levels in the game and the player starts with 3 ships.  There is a left-turn, right-turn, thrust, and fire button, much like there is in Star Castle. There are three kinds of powerups you can grab: a full-health powerup,
 triple-fire, and rapid fire.  (If you\rquote 
ve ever played the Mac game, Maelstrom, this was the inspiration for that.)  There is a kind of story thread running throughout with a few screens of story-line (with placeholders for epic splash screen art) and an \'93in-engine\'94
 game intro which kicks off the execution of the game (and can be skipped by hitting the Spacebar).  Different enemy times have different destruction point values and the point tally is kept at the top during the game.
\par 
\par Swarmongers is an unfinished
 game.  In addition to missing splash art, there are some aspects of game balance that need adjusting, and some whole features, such as having waves of spawn-ins on each level and having a high-score board which were never implemented.  However, the germ 
of a simple 2D shooter with some pretense at mission and story is there.
\par 
\par This document provides an overview to the game and its architecture with an emphasis on a discussion of game-play and AI.  For DirectX functionality, Swarmongers used with very little modification GPDUMB code taken from the CD included in LaMothe\rquote 
s book.  In my work on Swarmongers, I wanted to focus on game-play and AI development and using LaMothe\rquote s code allowed me to insulate myself from the details and issues of DirectX and concentr
ate on the game itself.  I feel that this approach paid off in my work.  Likewise, the use of a vector engine, rather than, for example, a sprite engine, allowed me to focus on the nuts and bolts of game-play rather than the visual-art aspects.
\par 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 2 Game Instructions and Cheats
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par When the game is started, an intro screen appears which tells the back-story of the game.  First, there is only text over a star-field.  Then three ships appear and the stars start moving to indicate that the ships are flying forward 
in formation.  Finally, the other (enemy) ships appear and there is a fight in which the 3 ships are doomed to destruction as ominous intro music plays.  The fight sequence could actually be called an in-game sequence because once the fighting begins, all
 of the ships are executing the actual in-game AI.  At any point, the intro sequence can be skipped by hitting Spacebar.  
\par 
\par When Spacebar is hit, or you wait long enough, you arrive at the logo (i.e. \'93attractor\'94) screen.  From here you can hit Spacebar to s
tart the game or Enter to visit the instructions.  From the instructions, one can see a number of things.  There are friendly, neutral, and hostile ships/objects in the game.  Hostile ships generally fire at the player and friendly ships.  Friendly ships 
will actually attack hostile ships, and they are given negative point values to penalize friendly fire.  Neutral objects don\rquote 
t attack either friendly or hostile ships but will cause damage to either in the event of collisions.  The main controls are like th
ose of Star Castle.  Left-arrow (or a left mouse movement) turns the ship left.  Right-arrow (or a right mouse movement) turns the ship right.  Up-arrow (or right-mouse button) thrusts, and Spacebar (or left-mouse button) fires.  In addition, there is als
o a function for the Down-arrow which toggles on and off \'93auto-pilot\'94.  This effectively turns on and off AI control of the ship.  Really, this function should probably be disabled, but it remains there for everyone\rquote 
s amusement.  Hitting Spacebar from the instruction screen brings you back to the logo screen.
\par 
\par From the logo screen, hitting Spacebar (or left-mouse) starts the game.  The first chapter screen appears letting you know what\rquote s going on.  There, you can see a placeholder area for a splash screen an
d some text.  In this chapter screen and all others you can Spacebar to skip to the following level, or just wait for it to pass.  
\par 
\par When a level starts, a blank screen showing the level number appears for awhile, followed by the actual level setup.  As th
e game is currently constructed there are fixed numbers of particular game objects and these and the player are spawned randomly into the level.   On the upper left is an indicator of the number of ships the player has.  At the upper right is the health (
up to 100) of the player, color-coded (green, yellow, red) to indicate how badly the player is damaged.  In the upper-center is the player\rquote 
s current score, and the space left behind at the top is used to indicate when triple- or rapid-fire are active.  At f
irst, for a brief moment, the screen is frozen and all game objects besides your ship are grayed out.  This allows you to get your bearings before the action begins.
\par 
\par Twice during a level (if the player is around long enough), a random powerup is deployed 
on the level in the form of a pink capsule that spins and floats around.  The interval at which this is deployed shortens as the levels advance.  The most likely powerup to be received is the triple-fire powerup.  The next most likely is rapid-fire.  Fina
lly, there is a chance of picking up a powerup that fully repairs Valiant\rquote s hull.  Powerups are destroyed if they hit other game objects, so grab them quickly.
\par 
\par After you\rquote ve defeated all of the enemies on a level, the game proceeds to the next level, possib
ly showing a chapter screen first, and on certain level screens rewarding you with an extra life.  If you die, your ship is respawned randomly on the level and there is the brief graying out and freeze to allow the player to see where they\rquote 
ve been dropped before the fray resumes.
\par 
\par At any point at all during the game, you can hit Escape to quit.  There is no checking to verify if you really meant to quit, so don\rquote t say no-one warned you.
\par 
\par If you\rquote re reading this document, you\rquote re probably a coder, so you probably want to know the numerous cheats and debug features that are available.  They are:
\par 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls3\adjustright\rin0\lin720\itap0 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 F1 toggles triple-fire.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}F2 toggles rapid-fire.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}F3 toggles God mode.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}F4 skips to the next level.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}F5 pauses the game.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}F6 toggles on/off debug display for game objects.  Th
is and the following feature were developed because, believe it or not, I had no way to use a debugger on Swarmongers.  Having no auxiliary machine, I had no facilities for remote debugging, and I did not know how to make a windowed-mode version of the ga
me (and admittedly still don\rquote 
t know).  Therefore, I developed a nifty way of debugging game state.  When F6 is hit, the mouse will appear.  Move the mouse over any game entities and lots of text will pop up showing you the stats and state for that object.  
(Naturally, pausing the game first, helps.)  This capability proved crucial in my debugging the game.  You can learn a lot about what kind of stats game objects have by just pausing the game and browsing their states in this mode.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}F7 toggles on/off a debug
 log window which displays messages.   A small window pops up in the middle of the screen which is like a console window only it just logs messages rather than allowing the player to type anything.  This is good for when you want to notice when unusual th
ings happen in the game.  
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}
F8 brings up a color palette and a mouse cursor.  Move the mouse cursor over a color and its number value will be displayed at the bottom of the screen.  I used this to pick out colors for the various game objects.  Hitting F8 aga
in dispels this screen, but things get kind of dicey for awhile after you\rquote re in play mode again.
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
\par That\rquote s basically everything from the player\rquote s perspective.  In order to really get under the surface it\rquote s time to start looking at code.  The following section is there to provide a road-map for this endeavor.
\par 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 \page 3 Code Structure and Functionality
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par The structure of Swarmongers can be thought of as having two layers.  The lower layer consists of WinMain() and the GPDUMB engine which is taken right out of \'93Windows Game Programming for Dummies\'94 (and completely documented in chapters 12 and 16).

\par The upper layer is the vector engine and game logic which is specific to Swarmongers.
\par 
\par }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 3.1 WinMain() and GPDUMB
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
\par The main.cpp file contains the WinMain() and WindowProc() fun
ctions that are the heart of any Windows application.  It also contains a set of global variables for objects such as the game itself, the field of stars, and an object for managing sounds.  The key global object is theGame which is of class type Game.  T
he Windows update loop calls its MainLoop() method during each frame.  The constructor and destructor for Game are used to do all initialization and cleanup, respectively, of the game.
\par 
\par Code inside Game and other classes makes calls to GPDUMB.  GPDUMB code 
basically provides a set of routines which interface with the lower-level DirectDraw, DirectInput, and DirectSound calls.  There are also routines for reading in .wav files, .bmp files and other file formats.  Functionality even exists for sprites (BOBs i
n the code and the book) but this feature is unused in Swarmongers.
\par 
\par The code for the GPDUMB engine is entirely contained in GPDUMB_includes.h, Gpdumb1.h and .cpp, and Gpdumb2.h and .cpp.  These files were taken practically without modification from \'93Windows Game Programming for Dummies\'94
 (from the CD that comes with the book), and Chapters 12 and 16 should be referenced to read in detail about the various features provided by this engine.  GPDUMB functionality is basically implemented by a set of C-style fun
ction-calls which means there are no classes, per se, in the GPDUMB engine, and you need to understand the globals and function calls to use GPDUMB.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 3.2 Swarmongers Game Logic
\par 
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
The upper layer will be the focus of this document, as it is where my efforts lay in creating the game and also where the meat of the game is.  As this layer was designed in an object-oriented fashion, I\rquote 
ll begin by laying out the class hierarchy of the game and describing the classes in a general manner.  Then, I\rquote ll outline the main aspects of code-flow which is centered around the methods of the Game class.  Finally, I\rquote 
ll give an overview of how the AI works.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 \page 3.2.1 Class Hierarchy Tree
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par Game
\par GameObject
\par \tab PointObject
\par \tab \tab PlayerShot
\par \tab \tab PlasmaAShot
\par \tab \tab PlasmaBShot
\par \tab \tab PlasmaCShot
\par \tab \tab PointExplosion
\par \tab VectObject
\par \tab \tab Asteroid
\par \tab \tab Whirlakill
\par \tab \tab PowerUp
\par \tab \tab PlasmaDShot
\par \tab \tab DreadnaughtShot
\par \tab \tab AIObject
\par \tab \tab \tab BuzzBomb
\par \tab \tab \tab Marauder
\par \tab \tab \tab Hellhornet
\par \tab \tab \tab Hornetnest
\par \tab \tab \tab Dreadnaught
\par \tab \tab \tab PlasmaTurret
\par \tab \tab \tab Stinger
\par \tab \tab \tab Warhawk
\par \tab \tab \tab \tab Valiant
\par \tab \tab \tab \tab RogueWarhawk
\par GameScreen
\par StarField
\par SoundManager
\par ActionEventManager
\par DebugLog
\par Vect
\par 
\par \page }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 3.2.2 Class Descriptions
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
\par The heart of a game of Swarmongers is the }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 Game}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
 class.  This class encapsulates all of the game-wide attributes and the general flow of a particular game of Swarmongers.  MainLoop() is the \'93method-in-chief\'94
, if you will.  It is called once for every frame of the game.  There are a number of private XLoop() methods that each correspond to a mode of execution of the game.  
\par 
\par Most game entities fall within the }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 GameObject}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989  class.  Generally, anything that moves around on the screen is a GameObject, including the player\rquote 
s ship, enemies, shot particles, and obstacles.  GameObject has two main children: }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 PointObject}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989  and }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 
VectObject}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 .  PointObject objects are game objects that are made of points; VectObject objects are game objects that are made of vectors (i.e., lines).  PointObject objects include the player\rquote s shots (}
{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 PlayerShot}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 ), explosions (}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 PointExplosion}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
), and various shots of other ships (}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 PlasmaAShot}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 , }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 PlasmaBShot}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid9187989 , }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 PlasmaCShot}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 ).   VectObject objects include the player powerups (}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 PowerUp}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \insrsid9187989 ), projectiles (}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 PlasmaDShot}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 , }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 DreadnaughtShot}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 ), dumb obstacles (}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 Asteroid}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 , }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 Whirlakill}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid9187989 ), and ships with AI (}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 AIObject}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 ).  AIObject encapsulates all ships, hostile (}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 BuzzBomb}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 , }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 Marauder}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 , }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 Hellhornet}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid9187989 , }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 Hornetnest}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 , }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 Dreadnaught}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 , }{\rtlch\fcs1 
\ab\af0 \ltrch\fcs0 \b\insrsid9187989 PlasmaTurret, RogueWarhawk}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 ), friendly (}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 Stinger}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 , }{\rtlch\fcs1 \ab\af0 
\ltrch\fcs0 \b\insrsid9187989 Warhawk}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 ), and yourself (}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 Valiant}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
).  A Game object owns any GameObject objects that are in existence at any moment of the game.  Of most obvious importance in GameObject are the Update() and Draw() methods.  The fi
rst of these updates the current state of the object.  The second draws (or renders) the object.
\par 
\par In addition to the Game object that exists during any run of the game and its population of GameObject objects, there are a few other classes.  }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 GameScreen}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
 encapsulates the dimensions of the game screen as well as providing methods for outputting text to that screen.  }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 StarField}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
 encapsulates the static field of stars that is displayed on the background of every level.  }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 SoundManager}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989  provides a set of methods for p
laying the various .wav files the game uses.  }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 ActionEventManager}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989  manages the keyboard and mouse inputs that control the game.  }{\rtlch\fcs1 \ab\af0 
\ltrch\fcs0 \b\insrsid9187989 DebugLog}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989  provides a way to for people modifying or debugging the code to post messages which will appear if the F7 feature is on (see Section 2).  Finally }{\rtlch\fcs1 \ab\af0 
\ltrch\fcs0 \b\insrsid9187989 Vect}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989  encapsulates the data and operations of vector math as used in Swarmongers.
\par 
\par }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 3.2.3 The Life Cycle of Game Execution
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
\par For most practical purposes, a person wanting to trace through the flow of Swarmongers can ignore the many l
ow level functions in GPDUMB and content themselves with tracing through the Game class (especially Game::MainLoop()).  Of course, remote debugging will be necessary to do this unless you modify GPDUMB to allow the game to run in a windowed mode.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 \page 3.2.3.1 Initialization
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par In main.cpp, there is a global variable (theGame) of type Game.  A new is done on this in WinMain() before the frame loop.  Of course, this calls the Game constructor.  The flow of this function is well-commented in the code.  There is a v
ariable defined in Game.h of type GameMode called (strangely enough) mode.  This determines which XLoop() method gets called by Game::MainLoop() during any given frame.  This is set initially to IntroMode which is the mode for the game introduction \'93
cinematics\'94.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 3.2.3.2 Frame Update
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par Game::MainLoop() gets called during each frame.  Its flow runs as follows.
\par 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls3\adjustright\rin0\lin720\itap0 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 If the next-level key is pressed, set the mode to IntermissionMode and go to the next level.  The name of the variable (restart_game) and the comments
 in the code are wrong.  (I was just too lazy to change the variable name after its function changed.)
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Tell Windows it\rquote s time to exit if Escape is pressed.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Get the current time and calculate the duration of the last frame using it.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Increment the elapsed time using the last frame duration.  This elapsed time gets reset usually when the mode is changed and always before new levels.  

\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Increment the total frame count and frame count timer which are used to calculate the current frames-per-second (FPS) value.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Clear the back-buffer drawing surface.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Read keyboard, mouse, and joystick input data.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Handle the case where F8 is released (after being hit).  If we\rquote 
re in PlayMode it means switching to PaletteMode and putting the mouse cursor up.  If we\rquote re in PaletteMode, it means getting rid of the mouse cursor and switching back to PlayMode.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Do the XLoop() method for whichever mode we\rquote 
re in.  These methods will update any GameObject objects being kept track of and then draw them to the back-buffer.  During game-play,  this \'93action\'94 happens in PlayModeLoop().
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}If the debug log (F7 feature) is up, display it over everything else.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Blit the back-buffer to the primary buffer using DD_Flip().
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Update the GameScreen object.  All this does is makes sure that the current text line for
 the screen is set to 1 which is the line where score and status are written.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Update the ActionEventManager object.  This updates any memory the code needs to have of previous keyboard and mouse state.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Update the SoundManager object.  This updates any acti
ve countdown timers for thrusting sounds, stopping the sounds if the respective timers expire.  Then the volumes of files are reset if a currently playing track ends.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Remember the current frame time for the next frame.
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
\par There are a number of modes that the game can be in and it would be useful to give an overview of each of the corresponding XLoop() methods for these.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 \page PlayMode
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par This is the main mode of the game, the mode in which the player is playing a level.  Its corresponding method, PlayModeLoop(), has the following flow.
\par 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls3\adjustright\rin0\lin720\itap0 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 Check for and respond to cheat and debug keys.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}
Check for victory conditions by calling CheckVictory() and switch to the appropriate mode if the level is won.  This generally means switching to IntermissionMode after setting the next 
level as the current level.  However, at certain levels ChapterMode is entered instead, and after the last level, WonMode is entered.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Deal with the case of the player dying.  If the player dies, we want to wait until any children of the player (e.g. the ex
plosion and shots) are out of existence and then we want to respawn the player as appropriate (randomly in all levels but the last one).  Then the game moves to IntermissionMode.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Execute the code for LevelCycle().  This does the bulk of the logic for updating and rendering GameObject objects during level play.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Draw the score and status indicators at the top of the screen.
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
\par The very heart of game-play logic resides in LevelCycle().  This is the method of Game that updates all of the GameObject objects that c
urrently exists and then draws (i.e., renders) them.  This really is the basic pattern in nearly any real-time video game: on each frame you update the status of all your game entity objects and then you render them in whatever view is appropriate.  The s
a
me pattern holds for 3D first-person shooters as well as simple 2D games such as this one.  In 3D games, the game objects and the world would have three dimensions of representation and another coordinate to represent the height position in the world.  Th
e
n there would be a camera somewhere in that world and the rendering code would execute all of the complex math to convert the camera position and placement of objects to the 2D window that the player has on the game world.   The person writing the game-pl
ay logic (including the AI) can be insulated from the highly complex and detailed logic of rendering the game scene, and the person whose strength is graphics coding can focus on the rendering engine.  
\par 
\par The flow of LevelCycle() is as follows.
\par 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \hich\af0\dbch\af0\loch\f0 1.\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls4\adjustright\rin0\lin720\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid9187989 If we are paused, skip to step 7.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \hich\af0\dbch\af0\loch\f0 2.\tab}Check for whether it\rquote s time to spawn a powerup.  If it is, spawn one; otherwise, count down the timer for powerup spawning.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \hich\af0\dbch\af0\loch\f0 3.\tab}Update all of the detects of all of the AIObject game objects.  Section 3.2.4 will discuss this in more detail since it\rquote 
s an AI feature.   Basically, though, each ship clears all of its detects and looks in its field of vision anew to create new detects.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \hich\af0\dbch\af0\loch\f0 4.\tab}Update the game\rquote s star field.  The only reason this is called is that the star field as a whole might have a ve
locity.  Currently, this is used in the game intro \'93cinematics\'94.  StarField::Update() updates the positions of all of the stars according to that velocity.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \hich\af0\dbch\af0\loch\f0 5.\tab}Update all of the GameObject objects.  This includes making them think and move.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \hich\af0\dbch\af0\loch\f0 6.\tab}Handle any resultin
g collisions by calling HandleCollision() for each possible pair of GameObject objects.  This generates all results of collisions between game objects and will apply damage and changes in velocity as appropriate.  Physically realistic equations for elasti
c collision resolution are used with each object having a mass value.  Look in Game::HandleCollision() for details.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \hich\af0\dbch\af0\loch\f0 7.\tab}Count down the pause timer if it\rquote s on.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \hich\af0\dbch\af0\loch\f0 8.\tab}If the debug display (F6 option) is on, look at where the mouse cursor is and if it\rquote s on top of a game object, call that object\rquote 
s dbg_display() method which causes it to display its stats.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \hich\af0\dbch\af0\loch\f0 9.\tab}Lock the back buffer.  }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 ACTUNG!}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
:  Note that for those of you new to DirectX, you }{\rtlch\fcs1 \ai\af0 \ltrch\fcs0 \i\insrsid9187989 never}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989  want to try to set a break-point between a DirectDraw buffer lock and unlock (at least not if you
\rquote re debugging locally).  This is because DirectX has exclusively seized control of the video display from Windows and you won\rquote t be able to see any debugging output as a result.  Of course, this is a moot point without a windowed version of t
he code to allow debugging in the first place.  Another thing you have to watch for, however, as a coder, is that you avoid trying to draw objects so that they run outside the screen.  If you do this, it is almost guaranteed that you\rquote 
ll get a lock-up and have to reboot your machine and if you\rquote ve not saved your workspace in Visual C++, you may be in for a nasty surprise when you restart Visual Studio.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \hich\af0\dbch\af0\loch\f0 10.\tab}If we\rquote re in a pre-level pause, draw the star field and all GameObject objects except the Valiant in \'93ghost\'94-g
rey.  Otherwise, draw the star field and GameObject objects normally.  Both the StarField object and all GameObject objects have Draw() methods that are called.  These have safety checks to make sure objects don\rquote t get drawn off the screen.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \hich\af0\dbch\af0\loch\f0 11.\tab}Unlock the back buffer.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \hich\af0\dbch\af0\loch\f0 12.\tab}Display a message on the screen if an attempt was made to draw off the screen.
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 IntroMode
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par This is the mode where the \'93cinematic\'94 intro is played.  The behavior of IntroModeLoop() is fairly intricate, but very generally, the elapsed time is used to
 cue events that happen during the hard-scripted intro.  When Spacebar is hit or the intro has run its course, the game goes into AttractMode.  It should be noted that most of the execution cases of this method call LevelCycle().
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 AttractMode
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par This mode is
 for displaying the game logo.  From this mode, Spacebar (or a left-mouse click) or Enter switch the game into the ChapterMode or InstructMode modes, respectively.  When the Spacebar is pressed, the current level and number of ships are reset to the appro
priate number (3) for the start of a game.  ChapterMode is entered instead of PlayMode because we want to display the first part of the story.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 InstructMode
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par InstructMode is the mode for the instructions page.  When Spacebar (or left-mouse click) is hit, the game switches back to AttractMode.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 ChapterMode
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par This is the mode in which the chapter text (and splash art) is displayed.  Which chapter text is displayed depends on the level we\rquote re about to run.  Once the player skips this or 20 seconds have elapsed, the game goes into IntermissionMode.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 IntermissionMode
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par IntermissionMode is the mode where the screen is blank and text is shown at the center.  An intermission screen appears before any level is begun and also after the player loses a ship.  If the player hasn\rquote 
t lost their last life, the next mode becomes PlayMode.  Otherwise, the mode reverts to AttractMode.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 WonMode
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par This mode shows the winning epilogue \'93chapter\'94.  When this finishes, the game reverts to the AttractMode mode.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 PaletteMode
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par This mode is the F8 mode which is used for getting the integral value for a color.  It is a tool for the coder who is creating new GameObject objects.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 3.2.3.2 Clean-up
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par After the frame-loop in WinMain() is broken out of by hitting Escape, a delete is done on theGame which, of course, calls the destructor for Game.  The flow of this function is well-commented in the code.
\par 
\par }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 3.2.4 Artificial Intelligence Architecture
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
\par The AI for Swarmongers is a simple finite state machine (FSM) based architecture.  There are essentially three components to the Swarmongers AI architecture: behaviors, perception, and plans.
\par 
\par }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 3.2.4.1 Behaviors
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
\par In designing a video-game AI, the first question you generally have to ask is: what kinds of behaviors do I want AI-controlled game entities to have at
 their disposal?  The next question is how to parameterize these behaviors.  In a real-time action game such as Swarmongers (or a 3D first-person shooter) it is generally a good strategy to mimic the player controls and treat the player\rquote 
s ship as another kind of AI entity whose behavior is to respond to player keystrokes.  This allows such niceties as being able to \'93test-drive\'94
 enemies by avataring them (i.e., placing them under player control), and being able have your game entities be either player- or computer-controlled (i.e. \'93bots\'94
) which is a must for modern multiplayer games.  Swarmongers follows this decision by providing a few simple behaviors.  Each behavior has a simple function in AIObject that applies whatever necessary changes need to be made t
o the game object or to the environment as a result of AI or player actions.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 Spin
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par This behavior turns the AI object left or right, depending on the parameter passed to AIObject::Spin().
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 Steer
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par This behavior turns the AI object left or right towards a target point.  There are two AIObject::Steer() functions (overloaded) that allow you to select that point.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 MainThrust
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par This thrusts the AI object forward.  AIObject::MainThrust() is the method for this.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 LeftThrust
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par This makes the AI object side-thrust so that it moves left.  AIObject::LeftThrust() does this.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 RightThrust
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par This makes the AI object side-thrust so that it moves left.  AIObject::RightThrust() does this.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 FireFrontWeapon
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par This fires the AI object\rquote s weapon.  AIObject::FireFrontWeapon() does this.
\par 
\par As you can see, all of the behaviors except Steer are exactly equivalent to keypresses that the player uses to control their ship.   Another characteristic that is common to all of the behaviors is that they do not have any memory state.  This is key to 
any game AI I\rquote 
ve developed.  The group of behaviors forms a set of action primitives that, when used, allow all possible AI (or player) behavior.  They are the blind motor procedures that an AI entity has at its disposal (though Steer() fits somewhat uneas
ily with that way of thinking).  On any given frame, none, one or more of these behaviors is called.
\par 
\par 
\par }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 3.2.4.2 Perception
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
\par Once the set of behavior primitives has been decided upon, the next question is: how does the AI know what behaviors to fire off on any given frame?   Well, how does game AI \'93know\'94
 anything?    AI-controlled game entities need to have the faculty of perception, the ability to isolate and identify important phenomena in their environment.  In Swarmongers, this means that AI ships need to
 be able to see and identify other game objects that are on the map during any given frame.
\par 
\par In Swarmongers, I put a limit on the \'93seeing\'94 ability of AI\rquote s by specifying an arc-width and a sight distance.  This is the AI\rquote s field of vision (FOV).  Perception
 is encapsulated in an array of (up to 20) detects.  Before most game object updating is done, each AIObject clears all of its detects using AIObject::ClearDetects() and checks for the detection of all other GameObject objects using AIObject::AddPossibleD
etect().  AddPossibleDetect() determines whether the game object passed in as a parameter is in the AI\rquote s FOV.  If it is, then the game object\rquote 
s type, ID number, relative bearing, range, and location and velocity vectors are remembered.  As it turns out, this is all the information AI-controlled ships need in Swarmongers to do all kinds of very responsive things.
\par 
\par }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid9187989 3.2.4.3 Plans
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
\par Once you\rquote ve decided on behavior primitives and necessary perception abilities, the question then becomes how to bridge the two of th
ese.  There are certainly many options, but a common option in games is to use a finite state machine (FSM) or a plan engine.  Swarmongers uses a very simple plan engine which is essentially an FSM with an extra state-stack for memory.  
\par 
\par A typical FSM con
sists of a set of states connected by transitions.  Each state runs a particular output or pattern of outputs and then, depending on what is present in the input, either switches to another state, or remains in that state for the next time interval (or ga
m
e-frame in our case).  In a very simple game AI (simpler than Swarmongers), a ship might have 2 or 3 moving/firing patterns.  Each of these would be assigned to a state.  States would change, then, either if some special event happened on the world (such 
as the player moving across the ship\rquote 
s field of fire, for example), or at random at certain intervals of time.  (You can imagine an enemy that just runs one pattern for 10 seconds, then randomly chooses the next pattern, and runs with it for 10 seconds.)
\par 
\par I
n Swarmongers, each of these states becomes a plan. For example FighterAssault is a plan state for most enemies that move and shoot at the player.  The behaviors fired off by this state depend on input gathered from the perceptions of the current frame.  
N
ote that there are functions in AIObject (for example, LeftCollisionThreat()) that extract information from the raw detection data that gets recreated every frame.  The next state the AI is in also depends on the same perceptions.  There is a default AI s
tate that the AI goes into at the beginning and from there, the methods of the plan states themselves decide what states follow.
\par 
\par While a simple FSM state = plan architecture would have allowed most of the important behavior in Swarmongers, there is a weakn
ess to this approach.  When we think of plans in real life, it is typically the case that we need to keep track of our progress on our plans somehow.  That is, plans often have memory associated with them.  Simple FSM states lack this kind of internal mem
o
ry, so in order to implement a multi-step plan, you would have to set up potentially two or more states for that plan and carefully implement the transitions between those states to allow the memory to be implemented.  This would throw off the convenient 
one-to-one correspondence of plans and states.  Also, there may be cases where you have to essentially duplicate the functionality of states because you might want several plans to share some of the same subgoal steps. 
\par 
\par One solution to this problem would b
e to add variables (or structs of variables) to each plan state to act as plan memory.  (This is precisely what I did for my work on Combat.)  However, the solution I decided upon for Swarmongers was to have a state stack.  Plan state methods are able to 
c
all each other, so it is possible to have composite plans.  But how do you deal with a situation where you want to have a plan switch temporarily to a new state to resolve a sub-problem and then go on with the old state once the sub-problem is solved?  A 
stack allows this.  A plan state can use AIObject::PushAIState() to place a subgoal-solving plan on the \'93top\'94 and that new plan can then call AIObject::PopAIState() when it\rquote 
s done.  An example of this in action is in the FighterAssault plan.  If there is a threatened collision in the left part of the AI\rquote 
s FOV, we want to switch to a plan to maneuver to the right.  When this plan is done, we want to go back to FighterAssault again.  In addition to the current state, Swarmongers allows there to be a stack of u
p to 5 plan states.  Generally, though, the code only uses one level of this stack.
\par 
\par It remains to list the plan states that are currently implemented in Swarmongers.  Each plan state (except DoNothing and GoToDefaultState) has a corresponding method in AIObject called XUpdate() where X is the plan name.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 DoNothing
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par The AIObject sits idle (or drifts, if it already has some velocity).
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 GoToDefaultState
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par On the next frame, the AIObject will be in its default state.  The constructor for the AIObject in question sets what that is.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 Avatar
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par The AIObject will respond to the player controls.  
\par 
\par 
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 RamNearestFoe
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par Turn towards the nearest enemy threat and thrust forward.  If no enemy threat is present, spin in place (hopefully, so that an enemy eventually falls into our FOV).
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 SmartRamNearestFoe
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par Calls RamNearestFoe if there are no collision threats.  If there are, then DodgeLeft or DodgeRight are called.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 TurretCamp
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par Turn towards the nearest enemy threat and fire.  If no enemy threat is present, spin in place.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 FighterAssault
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par If we are threatened with a collision with something, execute ManeuverLeft or ManeuverRight.  Otherwise, turn towards the nearest enemy.  Then 30% of the time, provided there aren\rquote t any friendlies in are field of fire (FOF) we fire.  10% of the t
ime we move forward.  If no enemy threat is present, spin in place.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 Explore
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par Repeatedly move forward for a set duration and then randomly turn left or right.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 SmartExplore
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par Calls Explore if there are no collision threats, but if there are it uses DodgeLeft or DodgeRight.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 FollowNearestFriend
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par Try to follow the nearest friend in our FOV.  If there are none there, spin in place looking for one.  DodgeLeft or DodgeRight are used to avoid collisions.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 ManeuverLeft
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par Turn left and thrust forward, effectively arcing to the left.  A variable called state_timer is used to limit the time of the maneuver.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 ManeuverRight
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par Turn left and thrust forward, effectively arcing to the right. state_timer is used to limit the duration of the maneuver.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 DodgeLeft
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par Apply side thrust to move to the left.  state_timer is used to limit the duration of the thrust.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 DodgeRight
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par Apply side thrust to move to the right.  state_timer is used to limit the duration of the thrust.
\par 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 PressForward
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par Apply forward thrust.  state_timer is used to limit the duration of the thrust.
\par 
\par These are very simple plans, indeed, and exhibit an intelligence that could be regarded at best to be insect-level, but one of the secrets of gaming AI is that you generally don\rquote t need to model all of the vast intricacies o
f human thought.  You merely need to be able to create \'93bots\'94
 that behave in ways which provide fun and challenge for the people who will be playing your games.  In a retro-style game like Swarmongers, not a lot of modeling of human behavior needs to be do
ne.  In first-person shooters or in other more advanced games where characterization\emdash meaning characterization in a literary sense\emdash 
is a more important aspect of the game, more elaborate modeling can be done on emotional/mental state.  (A good deal more of t
his kind of modeling was done by me on Scorched Worlds.)  The overall principle in game AI is to model those elements of human behavior and character that provide the desired play experience.  Until the day when we have true HAL9000-esque general AI, gami
ng AI coding will continue to be a toyshop tinker\rquote 
s art where the AI designer uses their own time-tested tricks and techniques as well as some well-known algorithms in the industry (such as A* for pathfinding) to handcraft bot foes and friends for the enjoyment of gamers.
\par 
\par 
\par 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 4 Suggested Improvements
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par As mentioned in the introduction, there are many improvements that could be made to this game and features that I\rquote d been planning.  
\par 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls3\adjustright\rin0\lin720\itap0 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 There aren\rquote t any routines for text file I/O.  A class for reading text file parameters should be created.  This would be useful for many of the following suggestions.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}There should be a high-score page along with a means of entering your name on it.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}The definitions of levels, chapter text, and game object definitions should reside i
n text files rather than being hard-coded.  This way, game parameters can be tuned without having to recompile the code (which is especially handy for non-coder testers).
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}As nice as the current debugging features are, it would probably be even nicer to hav
e a windowed version of the code so that the Visual Studio debugger could be used.  There may be a feature in GPDUMB to allow this but at the time I wasn\rquote t aware of it.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}One of the features that was planned but not implemented was to have waves of enemies s
pawn in at certain intervals rather than having all of the enemies appear in the beginning of the level.  Basically, they would teleport in either in random places or on the edge of the screen.  This would have allowed the experience of playing a level to
 be drawn out more.  As it is, a level tends to zip by.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}
I wanted to enlarge the canvas of the game by expanding the size of the game world and using a moveable camera/viewport centered about the Valiant.  This would have allowed larger and more elaborate missions to be developed.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Another feature I wanted to add was hierarchical enemies.  This would have been good for large boss-enemies with multiple turrets.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}SoundManager\rquote s code is kind of unwieldy to maintain.  In particular, it is stupid to have play method
s for each kind of audible game action.  A simple Play() method which passes in the name of the .wav file would have sufficed.  Sound file names should reside in config files.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}There should probably be some sort of check if the player hits Escape to determine if they really want to quit.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}For a better artistic feel, it would probably be best to replace the vector game objects with sprites.  GPDUMB provides some functionality for these through 
\'93BOB\'94s.  (See Windows Game Programming for Dummies.)
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs24\alang1025 \ltrch\fcs0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 5 Acknowledgements
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 

\par For assisting me in my efforts, special thanks go to\'85
\par 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\wrapdefault\aspalpha\aspnum\faauto\ls1\adjustright\rin0\lin720\itap0 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid9187989 The entire MLP team for play-testing, design suggestions, and ideas.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Mark Sachs for the inspiration and pattern set up by his port of Star Castle.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Andre LaMothe for his wonderful introductory PC game programming book \'93Windows Game Programming for Dummies\'94.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Rob Reed for the cool game logo.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Duncan McPherson for the level music.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f3 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Franz Liszt, and Dmitri Shostakovich for the intro and chapter start music, respectively.  For the curious, the start of Liszt\rquote s \'93Dante Symphony
\'94 is used in the intro and the second movement of the Shostakovich\rquote s 10}{\rtlch\fcs1 \af0 \ltrch\fcs0 \super\insrsid9187989 th}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989  Symphony.
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid9187989 
\par  
\par }{\*\themedata 504b030414000600080000002100828abc13fa0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb6ac3301045f785fe83d0b6d8
72ba28a5d8cea249777d2cd20f18e4b12d6a8f843409c9df77ecb850ba082d74231062ce997b55ae8fe3a00e1893f354e9555e6885647de3a8abf4fbee29bbd7
2a3150038327acf409935ed7d757e5ee14302999a654e99e393c18936c8f23a4dc072479697d1c81e51a3b13c07e4087e6b628ee8cf5c4489cf1c4d075f92a0b
44d7a07a83c82f308ac7b0a0f0fbf90c2480980b58abc733615aa2d210c2e02cb04430076a7ee833dfb6ce62e3ed7e14693e8317d8cd0433bf5c60f53fea2fe7
065bd80facb647e9e25c7fc421fd2ddb526b2e9373fed4bb902e182e97b7b461e6bfad3f010000ffff0300504b030414000600080000002100a5d6a7e7c00000
00360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4fc7060abb08
84a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b63095120f88d94fbc
52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462a1a82fe353
bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f7468656d652f7468
656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b4b0d592c9c
070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b4757e8d3f7
29e245eb2b260a0238fd010000ffff0300504b03041400060008000000210096b5ade296060000501b0000160000007468656d652f7468656d652f7468656d65
312e786d6cec594f6fdb3614bf0fd87720746f6327761a07758ad8b19b2d4d1bc46e871e698996d850a240d2497d1bdae38001c3ba618715d86d87615b8116d8
a5fb34d93a6c1dd0afb0475292c5585e9236d88aad3e2412f9e3fbff1e1fa9abd7eec70c1d1221294fda5efd72cd4324f1794093b0eddd1ef62fad79482a9c04
98f184b4bd2991deb58df7dfbb8ad755446282607d22d771db8b944ad79796a40fc3585ee62949606ecc458c15bc8a702910f808e8c66c69b9565b5d8a314d3c
94e018c8de1a8fa94fd05093f43672e23d06af89927ac06762a049136785c10607758d9053d965021d62d6f6804fc08f86e4bef210c352c144dbab999fb7b471
7509af678b985ab0b6b4ae6f7ed9ba6c4170b06c788a705430adf71bad2b5b057d03606a1ed7ebf5babd7a41cf00b0ef83a6569632cd467faddec9699640f671
9e76b7d6ac355c7c89feca9cccad4ea7d36c65b258a206641f1b73f8b5da6a6373d9c11b90c537e7f08dce66b7bbeae00dc8e257e7f0fd2badd5868b37a088d1
e4600ead1ddaef67d40bc898b3ed4af81ac0d76a197c86826828a24bb318f3442d8ab518dfe3a20f000d6458d104a9694ac6d88728eee2782428d60cf03ac1a5
193be4cbb921cd0b495fd054b5bd0f530c1931a3f7eaf9f7af9e3f45c70f9e1d3ff8e9f8e1c3e3073f5a42ceaa6d9c84e5552fbffdeccfc71fa33f9e7ef3f2d1
17d57859c6fffac327bffcfc793510d26726ce8b2f9ffcf6ecc98baf3efdfdbb4715f04d814765f890c644a29be408edf3181433567125272371be15c308d3f2
8acd249438c19a4b05fd9e8a1cf4cd296699771c393ac4b5e01d01e5a30a787d72cf1178108989a2159c77a2d801ee72ce3a5c545a6147f32a99793849c26ae6
6252c6ed637c58c5bb8b13c7bfbd490a75330f4b47f16e441c31f7184e140e494214d273fc80900aedee52ead87597fa824b3e56e82e451d4c2b4d32a423279a
668bb6690c7e9956e90cfe766cb37b077538abd27a8b1cba48c80acc2a841f12e698f13a9e281c57911ce298950d7e03aba84ac8c154f8655c4f2af074481847
bd804859b5e696007d4b4edfc150b12addbecba6b18b148a1e54d1bc81392f23b7f84137c2715a851dd0242a633f900710a218ed715505dfe56e86e877f0034e
16bafb0e258ebb4faf06b769e888340b103d3311da9750aa9d0a1cd3e4efca31a3508f6d0c5c5c398602f8e2ebc71591f5b616e24dd893aa3261fb44f95d843b
5974bb5c04f4edafb95b7892ec1108f3f98de75dc97d5772bdff7cc95d94cf672db4b3da0a6557f70db629362d72bcb0431e53c6066acac80d699a6409fb44d0
8741bdce9c0e4971624a2378cceaba830b05366b90e0ea23aaa241845368b0eb9e2612ca8c742851ca251ceccc70256d8d87265dd96361531f186c3d9058edf2
c00eafe8e1fc5c509031bb4d680e9f39a3154de0accc56ae644441edd76156d7429d995bdd88664a9dc3ad50197c38af1a0c16d684060441db02565e85f3b966
0d0713cc48a0ed6ef7dedc2dc60b17e92219e180643ed27acffba86e9c94c78ab90980d8a9f0913ee49d62b512b79626fb06dccee2a432bbc60276b9f7dec44b
7904cfbca4f3f6443ab2a49c9c2c41476dafd55c6e7ac8c769db1bc399161ee314bc2e75cf8759081743be1236ec4f4d6693e5336fb672c5dc24a8c33585b5fb
9cc24e1d4885545b58463634cc5416022cd19cacfccb4d30eb45296023fd35a458598360f8d7a4003bbaae25e331f155d9d9a5116d3bfb9a95523e51440ca2e0
088dd844ec6370bf0e55d027a012ae264c45d02f708fa6ad6da6dce29c255df9f6cae0ec38666984b372ab5334cf640b37795cc860de4ae2816e95b21be5ceaf
8a49f90b52a51cc6ff3355f47e0237052b81f6800fd7b802239daf6d8f0b1571a8426944fdbe80c6c1d40e8816b88b8569082ab84c36ff0539d4ff6dce591a26
ade1c0a7f669880485fd484582903d284b26fa4e2156cff62e4b9265844c4495c495a9157b440e091bea1ab8aaf7760f4510eaa69a6465c0e04ec69ffb9e65d0
28d44d4e39df9c1a52ecbd3607fee9cec7263328e5d661d3d0e4f62f44acd855ed7ab33cdf7bcb8ae889599bd5c8b3029895b6825696f6af29c239b75a5bb1e6
345e6ee6c28117e73586c1a2214ae1be07e93fb0ff51e133fb65426fa843be0fb515c187064d0cc206a2fa926d3c902e907670048d931db4c1a44959d366ad93
b65abe595f70a75bf03d616c2dd959fc7d4e6317cd99cbcec9c58b34766661c7d6766ca1a9c1b327531486c6f941c638c67cd22a7f75e2a37be0e82db8df9f30
254d30c1372581a1f51c983c80e4b71ccdd28dbf000000ffff0300504b0304140006000800000021000dd1909fb60000001b010000270000007468656d652f74
68656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f78277086f6fd3ba109126dd88d0add40384e4350d363f24
51eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89d93b64b060828e6f37ed1567914b284d262452282e3198
720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd5001996509affb3fd381a89672f1f165dfe514173d9850528
a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100828abc13fa0000001c0200001300000000000000000000000000
000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6a7e7c0000000360100000b000000000000000000000000
002b0100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a0000001c00000000000000000000000000140200007468
656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d001400060008000000210096b5ade296060000501b000016000000000000000000
00000000d10200007468656d652f7468656d652f7468656d65312e786d6c504b01022d00140006000800000021000dd1909fb60000001b010000270000000000
00000000000000009b0900007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000960a00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax267\lsdlockeddef0\lsdsemihiddendef1\lsdunhideuseddef1\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 1;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 2;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 3;
\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 4;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 5;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 6;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8;
\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;\lsdpriority39 \lsdlocked0 toc 1;\lsdpriority39 \lsdlocked0 toc 2;\lsdpriority39 \lsdlocked0 toc 3;\lsdpriority39 \lsdlocked0 toc 4;\lsdpriority39 \lsdlocked0 toc 5;\lsdpriority39 \lsdlocked0 toc 6;
\lsdpriority39 \lsdlocked0 toc 7;\lsdpriority39 \lsdlocked0 toc 8;\lsdpriority39 \lsdlocked0 toc 9;\lsdqformat1 \lsdpriority35 \lsdlocked0 caption;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority10 \lsdlocked0 Title;
\lsdpriority1 \lsdlocked0 Default Paragraph Font;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority22 \lsdlocked0 Strong;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;\lsdsemihidden0 \lsdunhideused0 \lsdpriority59 \lsdlocked0 Table Grid;\lsdunhideused0 \lsdlocked0 Placeholder Text;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 1;
\lsdunhideused0 \lsdlocked0 Revision;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority29 \lsdlocked0 Quote;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdpriority37 \lsdlocked0 Bibliography;
\lsdqformat1 \lsdpriority39 \lsdlocked0 TOC Heading;}}{\*\datastore 0105000002000000180000004d73786d6c322e534158584d4c5265616465722e352e3000000000000000000000060000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffffec69d9888b8b3d4c859eaf6cd158be0f0000000000000000000000005046
7a8e0bbcc901feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000105000000000000}}